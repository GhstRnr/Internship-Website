@page "/Search"
@using app.Data
@using System.Net.Http;
@using System.Text.Json;

<PageTitle>Index</PageTitle>

<h1>"SEARCH"</h1>

@if (showthis) 
{
<body>

<div class="w3-container">
  <h2>Wider Text</h2>
  <p>The w3-wide class specifies a wider text.</p>
  <p class="w3-wide">The w3-wide class specifies a wider text.</p>
</div>
</body>

<h1>Welcome to your new app.</h1>


<SurveyPrompt Title="How is Blazor working for you?" />

}
<div onclick="document.getElementById('ClickPlay').play()">
    <input type="text" @bind-value="searchTerm" /> 
    <audio id="ClickPlay" src="click.mp3" />
    <button id="SearchButton"  @onclick="Searchit" >Search</button> 

    <div class="searchContainer" >

    @if (searchResults != null && searchResults.Any())
    {
      int i=0;
      @foreach (var result in searchResults)
      {
        i++;

        <div id="Result-@i" class="bar" onclick="document.getElementById('Result-@i').className='highlight'">
          <img src="@result.thumbnail" height="200px"> 
          <div class="jeb">
            <p onclick="test1('result-@i')">@result.title</p>
            <p>@result.price</p>
            <p>@result.description</p>
          </div>
        </div> 
      }
    }
    </div>
</div>

<!--
<script>
  // Get the reference to the button and audio element
  var playButton = document.getElementById('playButton');
  var audio = new Audio('/path/to/your/audio/file.mp3');

  // Define the button click event handler
  playButton.addEventListener('click', function() {
    if (audio.paused) {
      audio.play();
      playButton.innerHTML = 'Pause Music';
    } else {
      audio.pause();
      playButton.innerHTML = 'Play Music';
    }
  });
</script>

-->

@code {
    private bool showthis=false;
    private string? searchTerm;
    private List<SearchResult>? searchResults;

    private 
    
    bool showTitle = false;
    private async void Searchit()
    {
        /* searchResults = new List<SearchResult>()
        {
            new() {Title="iPod 64GB", Price="$249.99", Description="The iPod is a pocket-sized portable music-playing device produced by Apple and sold across the world. It's the best-known family of MP3 players ",Thumbnail="https://m.media-amazon.com/images/I/41+6wshUjVS._AC_UY436_FMwebp_QL65_.jpg"},
            new() {Title="iPod 128GB", Price="$299.99", Description="The iPod is a pocket-sized portable music-playing device produced by Apple and sold across the world. It's the best-known family of MP3 players ",Thumbnail="https://m.media-amazon.com/images/I/41+6wshUjVS._AC_UY436_FMwebp_QL65_.jpg"},
            new() {Title="iPod 256GB", Price="$349.99", Description="The iPod is a pocket-sized portable music-playing device produced by Apple and sold across the world. It's the best-known family of MP3 players ",Thumbnail="https://m.media-amazon.com/images/I/41+6wshUjVS._AC_UY436_FMwebp_QL65_.jpg"}
        };
         */

        HttpClient client = new();
        string  url=$"https://crust.azurewebsites.net/api/drp/{searchTerm}";

     //   url="http://localhost:7071/api/drp/ipod";

        client.DefaultRequestHeaders.Add("X-Functions-Key", "QsoctEMKv4g7iHTxhGsRNTxHKeP_NKv3QHeFIyZOki8FAzFu2hJtLA==");
        var request = new HttpRequestMessage(HttpMethod.Get, new Uri(url));

        var response =  client.Send(request);
        
        if (response.IsSuccessStatusCode) {
            var content = await response.Content.ReadAsByteArrayAsync();

            string contentS = System.Text.Encoding.Default.GetString(content);
Console.WriteLine ($" Got line: {contentS}");
            searchResults = JsonSerializer.Deserialize<List<SearchResult>>(contentS);

            foreach ( var s in searchResults) {
                Console.WriteLine ( s.title );
            }
        }
    }
        
    }
